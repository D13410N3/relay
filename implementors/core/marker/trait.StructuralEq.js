(function() {var implementors = {};
implementors["document_metrics"] = [{"text":"impl StructuralEq for MetricPath","synthetic":false,"types":[]}];
implementors["relay_auth"] = [{"text":"impl StructuralEq for RelayVersion","synthetic":false,"types":[]},{"text":"impl StructuralEq for KeyParseError","synthetic":false,"types":[]}];
implementors["relay_common"] = [{"text":"impl StructuralEq for EventType","synthetic":false,"types":[]},{"text":"impl StructuralEq for DataCategory","synthetic":false,"types":[]},{"text":"impl StructuralEq for GlobOptions","synthetic":false,"types":[]},{"text":"impl StructuralEq for ProjectKey","synthetic":false,"types":[]},{"text":"impl StructuralEq for UnixTimestamp","synthetic":false,"types":[]}];
implementors["relay_config"] = [{"text":"impl StructuralEq for ConfigErrorKind","synthetic":false,"types":[]},{"text":"impl StructuralEq for Credentials","synthetic":false,"types":[]},{"text":"impl StructuralEq for RelayMode","synthetic":false,"types":[]},{"text":"impl StructuralEq for KafkaTopic","synthetic":false,"types":[]},{"text":"impl StructuralEq for UpstreamParseError","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; StructuralEq for UpstreamDescriptor&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["relay_filter"] = [{"text":"impl StructuralEq for SchemeDomainPort","synthetic":false,"types":[]},{"text":"impl StructuralEq for FilterStatKey","synthetic":false,"types":[]},{"text":"impl StructuralEq for LegacyBrowser","synthetic":false,"types":[]}];
implementors["relay_general"] = [{"text":"impl StructuralEq for MultipleRule","synthetic":false,"types":[]},{"text":"impl StructuralEq for AliasRule","synthetic":false,"types":[]},{"text":"impl StructuralEq for Vars","synthetic":false,"types":[]},{"text":"impl StructuralEq for ReplaceRedaction","synthetic":false,"types":[]},{"text":"impl StructuralEq for Redaction","synthetic":false,"types":[]},{"text":"impl StructuralEq for Pii","synthetic":false,"types":[]},{"text":"impl StructuralEq for SelectorPathItem","synthetic":false,"types":[]},{"text":"impl StructuralEq for SelectorSpec","synthetic":false,"types":[]},{"text":"impl StructuralEq for DebugId","synthetic":false,"types":[]},{"text":"impl StructuralEq for CodeId","synthetic":false,"types":[]},{"text":"impl StructuralEq for EventId","synthetic":false,"types":[]},{"text":"impl StructuralEq for HeaderName","synthetic":false,"types":[]},{"text":"impl StructuralEq for HeaderValue","synthetic":false,"types":[]},{"text":"impl StructuralEq for SecurityReportType","synthetic":false,"types":[]},{"text":"impl StructuralEq for SessionStatus","synthetic":false,"types":[]},{"text":"impl StructuralEq for ThreadId","synthetic":false,"types":[]},{"text":"impl StructuralEq for RegVal","synthetic":false,"types":[]},{"text":"impl StructuralEq for Addr","synthetic":false,"types":[]},{"text":"impl StructuralEq for IpAddr","synthetic":false,"types":[]},{"text":"impl StructuralEq for Level","synthetic":false,"types":[]},{"text":"impl StructuralEq for LenientString","synthetic":false,"types":[]},{"text":"impl StructuralEq for JsonLenientString","synthetic":false,"types":[]},{"text":"impl StructuralEq for Timestamp","synthetic":false,"types":[]},{"text":"impl StructuralEq for ProcessingAction","synthetic":false,"types":[]},{"text":"impl StructuralEq for RemarkType","synthetic":false,"types":[]},{"text":"impl StructuralEq for ErrorKind","synthetic":false,"types":[]},{"text":"impl StructuralEq for SkipSerialization","synthetic":false,"types":[]}];
implementors["relay_log"] = [{"text":"impl StructuralEq for LogFormat","synthetic":false,"types":[]}];
implementors["relay_quotas"] = [{"text":"impl StructuralEq for QuotaScope","synthetic":false,"types":[]},{"text":"impl StructuralEq for ReasonCode","synthetic":false,"types":[]},{"text":"impl StructuralEq for RetryAfter","synthetic":false,"types":[]},{"text":"impl StructuralEq for RateLimitScope","synthetic":false,"types":[]}];
implementors["relay_redis"] = [{"text":"impl StructuralEq for RedisConfig","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()