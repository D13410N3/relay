(function() {var implementors = {};
implementors["document_metrics"] = [{"text":"impl RefUnwindSafe for SchemaFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseSchemaFormatError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetricType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetricPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Metric","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cli","synthetic":true,"types":[]}];
implementors["generate_schema"] = [{"text":"impl RefUnwindSafe for SchemaFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseSchemaFormatError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cli","synthetic":true,"types":[]}];
implementors["process_event"] = [{"text":"impl RefUnwindSafe for Cli","synthetic":true,"types":[]}];
implementors["relay"] = [{"text":"impl RefUnwindSafe for THEME","synthetic":true,"types":[]}];
implementors["relay_auth"] = [{"text":"impl RefUnwindSafe for RelayVersion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseRelayVersionError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KeyParseError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnpackError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignatureHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PublicKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SecretKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Registration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignedRegisterState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegisterState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegisterRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegisterChallenge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegisterResponse","synthetic":true,"types":[]}];
implementors["relay_cabi"] = [{"text":"impl RefUnwindSafe for RelayPublicKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelaySecretKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelayKeyPair","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelayRegisterRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelayStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelayUuid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelayBuf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelayErrorCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelayGeoIpLookup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelayStoreNormalizer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobFlags","synthetic":true,"types":[]}];
implementors["relay_common"] = [{"text":"impl RefUnwindSafe for MetricsClient","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for UpsertingLazyCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for LazyCellRef&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseEventTypeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataCategory","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpanStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseSpanStatusError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GlobOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseProjectKeyError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProjectKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetryBackoff","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnixTimestamp","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Glob","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for GlobMatcher&lt;T&gt;","synthetic":true,"types":[]}];
implementors["relay_config"] = [{"text":"impl RefUnwindSafe for ByteSize","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConfigError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConfigErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OverridableConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Credentials","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelayMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Relay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HttpEncoding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KafkaTopic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TopicNames","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KafkaConfigParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Processing","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Outcomes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimalConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UpstreamError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UpstreamParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for UpstreamDescriptor&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["relay_ffi"] = [{"text":"impl RefUnwindSafe for Panic","synthetic":true,"types":[]}];
implementors["relay_filter"] = [{"text":"impl RefUnwindSafe for SchemeDomainPort","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GlobPatterns","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterStatKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LegacyBrowser","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientIpsFilterConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CspFilterConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ErrorMessagesFilterConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReleasesFilterConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LegacyBrowsersFilterConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FiltersConfig","synthetic":true,"types":[]}];
implementors["relay_general"] = [{"text":"impl&lt;'a&gt; !RefUnwindSafe for PiiAttachmentsProcessor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrubEncodings","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CompiledPiiConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Pattern","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PatternRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultipleRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AliasRule","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RedactPairRule","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RuleType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RuleSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vars","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PiiConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataScrubbingConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScrubMinidumpError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for PiiProcessor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReplaceRedaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Redaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnknownValueTypeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValueType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxChars","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BagSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pii","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldAttrs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CharacterSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ProcessingState&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Path&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Chunk&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelectorPathItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelectorSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Breadcrumb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientSdkPackage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientSdkInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OsContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RuntimeContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BrowserContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GpuContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraceId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpanId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraceContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ContextInner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Contexts","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NativeImagePath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SystemSdkInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppleDebugImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CodeId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NativeDebugImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugMeta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtraValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EventProcessingError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupingConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exception","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fingerprint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Measurements","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MachException","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PosixSignal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MechanismMeta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mechanism","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleRate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Metrics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cookies","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HeaderValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Headers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Query","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Csp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpectCt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hpkp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpectStaple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SecurityReportType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SessionStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseSessionStatusError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SessionAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SessionUpdate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SessionAggregateItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SessionAggregates","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrameVars","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FrameData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawStacktrace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stacktrace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TagEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TemplateInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Thread","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Values&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for PairList&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidRegVal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegVal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Addr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IpAddr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseLevelError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LenientString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for JsonLenientString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timestamp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Geo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for User","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UserReport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClockDriftProcessor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeoIpLookup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StoreConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StoreProcessor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetaTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProcessingAction","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Annotated&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for SerializableAnnotated&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RemarkType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Remark","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SkipSerialization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValueDescription&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["relay_log"] = [{"text":"impl RefUnwindSafe for LogFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SentryConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a, E:&nbsp;?Sized&gt; RefUnwindSafe for LogError&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["relay_quotas"] = [{"text":"impl RefUnwindSafe for Scoping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ItemScoping&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuotaScope","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReasonCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Quota","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetryAfter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidRetryAfter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RateLimitScope","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RateLimit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RateLimits","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for RateLimitsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RateLimitsIntoIter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RateLimitingError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RedisRateLimiter","synthetic":true,"types":[]}];
implementors["relay_redis"] = [{"text":"impl RefUnwindSafe for RedisConfig","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RedisError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Connection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PooledClient","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RedisPool","synthetic":true,"types":[]}];
implementors["relay_server"] = [{"text":"impl !RefUnwindSafe for ServerError","synthetic":true,"types":[]}];
implementors["scrub_minidump"] = [{"text":"impl RefUnwindSafe for Cli","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()