(function() {var implementors = {};
implementors["document_metrics"] = [{"text":"impl UnwindSafe for SchemaFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseSchemaFormatError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetricType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetricPath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Metric","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cli","synthetic":true,"types":[]}];
implementors["generate_schema"] = [{"text":"impl UnwindSafe for SchemaFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseSchemaFormatError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cli","synthetic":true,"types":[]}];
implementors["process_event"] = [{"text":"impl UnwindSafe for Cli","synthetic":true,"types":[]}];
implementors["relay"] = [{"text":"impl UnwindSafe for THEME","synthetic":true,"types":[]}];
implementors["relay_auth"] = [{"text":"impl UnwindSafe for RelayVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseRelayVersionError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KeyParseError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnpackError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignatureHeader","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PublicKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SecretKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Registration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignedRegisterState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegisterState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegisterRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegisterChallenge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegisterResponse","synthetic":true,"types":[]}];
implementors["relay_cabi"] = [{"text":"impl UnwindSafe for RelayPublicKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelaySecretKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayKeyPair","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayRegisterRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayStr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayUuid","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayBuf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayErrorCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayGeoIpLookup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayStoreNormalizer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobFlags","synthetic":true,"types":[]}];
implementors["relay_common"] = [{"text":"impl UnwindSafe for MetricsClient","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for UpsertingLazyCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for LazyCellRef&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseEventTypeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataCategory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpanStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseSpanStatusError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseProjectKeyError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProjectKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RetryBackoff","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnixTimestamp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Glob","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for GlobMatcher&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["relay_config"] = [{"text":"impl UnwindSafe for ByteSize","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ConfigError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConfigErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OverridableConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Credentials","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Relay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HttpEncoding","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HttpClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KafkaTopic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TopicNames","synthetic":true,"types":[]},{"text":"impl UnwindSafe for KafkaConfigParam","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Processing","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Outcomes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimalConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UpstreamError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UpstreamParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for UpstreamDescriptor&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["relay_ffi"] = [{"text":"impl UnwindSafe for Panic","synthetic":true,"types":[]}];
implementors["relay_filter"] = [{"text":"impl UnwindSafe for GlobPatterns","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterStatKey","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LegacyBrowser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClientIpsFilterConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CspFilterConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorMessagesFilterConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReleasesFilterConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LegacyBrowsersFilterConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FiltersConfig","synthetic":true,"types":[]}];
implementors["relay_general"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for PiiAttachmentsProcessor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrubEncodings","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CompiledPiiConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternRule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MultipleRule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AliasRule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RedactPairRule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuleType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuleSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Vars","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PiiConfig","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DataScrubbingConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ScrubMinidumpError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for PiiProcessor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReplaceRedaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Redaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnknownValueTypeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValueType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxChars","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BagSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pii","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FieldAttrs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CharacterSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ProcessingState&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Path&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Chunk&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectorPathItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectorSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Breadcrumb","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClientSdkPackage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClientSdkInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OsContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimeContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BrowserContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GpuContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpanId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ContextInner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Contexts","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NativeImagePath","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SystemSdkInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AppleDebugImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CodeId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NativeDebugImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugImage","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DebugMeta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtraValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventProcessingError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GroupingConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Exception","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fingerprint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Measurements","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MachException","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PosixSignal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MechanismMeta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mechanism","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SampleRate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Metrics","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cookies","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HeaderValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Headers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Query","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Request","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Csp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpectCt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Hpkp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpectStaple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SecurityReportType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SessionStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseSessionStatusError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SessionAttributes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SessionUpdate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SessionAggregateItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SessionAggregates","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameVars","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawStacktrace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stacktrace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TagEntry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TemplateInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ThreadId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Thread","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Values&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for PairList&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidRegVal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegVal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Addr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IpAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseLevelError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Level","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LenientString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JsonLenientString","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Timestamp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Geo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for User","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UserReport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClockDriftProcessor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeoIpLookup","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StoreConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for StoreProcessor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MetaTree","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProcessingAction","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Annotated&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; UnwindSafe for SerializableAnnotated&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RemarkType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Remark","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SkipSerialization","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ValueDescription&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["relay_log"] = [{"text":"impl UnwindSafe for LogFormat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LogConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SentryConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a, E:&nbsp;?Sized&gt; UnwindSafe for LogError&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["relay_quotas"] = [{"text":"impl UnwindSafe for Scoping","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ItemScoping&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for QuotaScope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReasonCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Quota","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RetryAfter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidRetryAfter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RateLimitScope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RateLimit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RateLimits","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RateLimitsIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RateLimitsIntoIter","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RateLimitingError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RedisRateLimiter","synthetic":true,"types":[]}];
implementors["relay_redis"] = [{"text":"impl UnwindSafe for RedisConfig","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RedisError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Connection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for PooledClient","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RedisPool","synthetic":true,"types":[]}];
implementors["relay_server"] = [{"text":"impl !UnwindSafe for ServerError","synthetic":true,"types":[]}];
implementors["scrub_minidump"] = [{"text":"impl UnwindSafe for Cli","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()