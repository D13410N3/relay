(function() {var implementors = {};
implementors["relay_common"] = [{"text":"impl JsonSchema for EventType","synthetic":false,"types":[]},{"text":"impl JsonSchema for SpanStatus","synthetic":false,"types":[]}];
implementors["relay_general"] = [{"text":"impl JsonSchema for Breadcrumb","synthetic":false,"types":[]},{"text":"impl JsonSchema for ClientSdkPackage","synthetic":false,"types":[]},{"text":"impl JsonSchema for ClientSdkInfo","synthetic":false,"types":[]},{"text":"impl JsonSchema for DeviceContext","synthetic":false,"types":[]},{"text":"impl JsonSchema for OsContext","synthetic":false,"types":[]},{"text":"impl JsonSchema for RuntimeContext","synthetic":false,"types":[]},{"text":"impl JsonSchema for AppContext","synthetic":false,"types":[]},{"text":"impl JsonSchema for BrowserContext","synthetic":false,"types":[]},{"text":"impl JsonSchema for GpuContext","synthetic":false,"types":[]},{"text":"impl JsonSchema for TraceId","synthetic":false,"types":[]},{"text":"impl JsonSchema for SpanId","synthetic":false,"types":[]},{"text":"impl JsonSchema for TraceContext","synthetic":false,"types":[]},{"text":"impl JsonSchema for Context","synthetic":false,"types":[]},{"text":"impl JsonSchema for ContextInner","synthetic":false,"types":[]},{"text":"impl JsonSchema for Contexts","synthetic":false,"types":[]},{"text":"impl JsonSchema for NativeImagePath","synthetic":false,"types":[]},{"text":"impl JsonSchema for SystemSdkInfo","synthetic":false,"types":[]},{"text":"impl JsonSchema for AppleDebugImage","synthetic":false,"types":[]},{"text":"impl JsonSchema for CodeId","synthetic":false,"types":[]},{"text":"impl JsonSchema for DebugId","synthetic":false,"types":[]},{"text":"impl JsonSchema for NativeDebugImage","synthetic":false,"types":[]},{"text":"impl JsonSchema for DebugImage","synthetic":false,"types":[]},{"text":"impl JsonSchema for DebugMeta","synthetic":false,"types":[]},{"text":"impl JsonSchema for EventId","synthetic":false,"types":[]},{"text":"impl JsonSchema for ExtraValue","synthetic":false,"types":[]},{"text":"impl JsonSchema for EventProcessingError","synthetic":false,"types":[]},{"text":"impl JsonSchema for Event","synthetic":false,"types":[]},{"text":"impl JsonSchema for Exception","synthetic":false,"types":[]},{"text":"impl JsonSchema for Fingerprint","synthetic":false,"types":[]},{"text":"impl JsonSchema for LogEntry","synthetic":false,"types":[]},{"text":"impl JsonSchema for Message","synthetic":false,"types":[]},{"text":"impl JsonSchema for CError","synthetic":false,"types":[]},{"text":"impl JsonSchema for MachException","synthetic":false,"types":[]},{"text":"impl JsonSchema for PosixSignal","synthetic":false,"types":[]},{"text":"impl JsonSchema for MechanismMeta","synthetic":false,"types":[]},{"text":"impl JsonSchema for Mechanism","synthetic":false,"types":[]},{"text":"impl JsonSchema for SampleRate","synthetic":false,"types":[]},{"text":"impl JsonSchema for Metrics","synthetic":false,"types":[]},{"text":"impl JsonSchema for Cookies","synthetic":false,"types":[]},{"text":"impl JsonSchema for HeaderName","synthetic":false,"types":[]},{"text":"impl JsonSchema for HeaderValue","synthetic":false,"types":[]},{"text":"impl JsonSchema for Headers","synthetic":false,"types":[]},{"text":"impl JsonSchema for Query","synthetic":false,"types":[]},{"text":"impl JsonSchema for Request","synthetic":false,"types":[]},{"text":"impl JsonSchema for Span","synthetic":false,"types":[]},{"text":"impl JsonSchema for Frame","synthetic":false,"types":[]},{"text":"impl JsonSchema for FrameVars","synthetic":false,"types":[]},{"text":"impl JsonSchema for FrameData","synthetic":false,"types":[]},{"text":"impl JsonSchema for RawStacktrace","synthetic":false,"types":[]},{"text":"impl JsonSchema for Stacktrace","synthetic":false,"types":[]},{"text":"impl JsonSchema for TagEntry","synthetic":false,"types":[]},{"text":"impl JsonSchema for Tags","synthetic":false,"types":[]},{"text":"impl JsonSchema for ThreadId","synthetic":false,"types":[]},{"text":"impl JsonSchema for Thread","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; JsonSchema for Values&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: JsonSchema,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; JsonSchema for PairList&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: JsonSchema + AsPair,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as AsPair&gt;::Value: JsonSchema,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl JsonSchema for RegVal","synthetic":false,"types":[]},{"text":"impl JsonSchema for Addr","synthetic":false,"types":[]},{"text":"impl JsonSchema for IpAddr","synthetic":false,"types":[]},{"text":"impl JsonSchema for Level","synthetic":false,"types":[]},{"text":"impl JsonSchema for LenientString","synthetic":false,"types":[]},{"text":"impl JsonSchema for JsonLenientString","synthetic":false,"types":[]},{"text":"impl JsonSchema for Timestamp","synthetic":false,"types":[]},{"text":"impl JsonSchema for Geo","synthetic":false,"types":[]},{"text":"impl JsonSchema for User","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; JsonSchema for Annotated&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: JsonSchema,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl JsonSchema for Value","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()